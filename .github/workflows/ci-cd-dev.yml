name: CI/CD Dev

on:
  pull_request:
    branches: [master, develop]

jobs:
  test:
    name: Run Flutter analyze and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java Version
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Get flutter dependencies
        run: flutter pub get

      - name: Run Analyze code
        run: flutter analyze

      - name: Run Code format lib/
        run: flutter format --dry-run --set-exit-if-changed lib/

      - name: Run Code format test/
        run: flutter format --dry-run --set-exit-if-changed test/

      - name: Run test and collect coverage info
        run: flutter test --coverage

      - name: Export results test to JSON
        run: flutter test --machine > test-results.json

      - name: Run Codecov Reporter
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: coverage/lcov.info
          flags: unittests # optional
          directory: coverage/
          functionalities: html
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

      - name: Run Test Reporter
        uses: dorny/test-reporter@v1
        with:
          name: test-results
          path: test-results.json
          reporter: flutter-json

      - uses: VeryGoodOpenSource/very_good_coverage@v1.1.1
        with:
          min_coverage: 80
  build_Android_App:
    name: Build APP Bundle
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java Version
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"

      - name: Setup Flutter Version
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Get flutter dependencies
        run: flutter pub get

      - name: Android Build APK
        run: flutter build apk --split-per-abi

      - name: Android Build APPBundle
        run: flutter build appbundle
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: DignusApp-Android
          path: |
            build/app/outputs/bundle/release/app-release.aab
            build/app/outputs/apk/release/*.apk
  deploy_dev:
    name: Firebase App Distribution
    if: github.event.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: [build_Android_App]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download a artifact
        id: download-artifact
        uses: actions/download-artifact@v2
        with:
          name: DignusApp-Android

      - name: Firebase App Distribution Android
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID_ANDROID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: mau√°-dev
          file: apk/release/app-arm64-v8a-release.apk
          debug: true
